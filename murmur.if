## <summary>Policy controlling access to the Murmur Mumble server</summary>
## <required val="false">
##  Contains optional interfaces for controlling access to Murmur.
## </required>

########################################
## <summary>
##  Allow connecting to the Murmur TCP port.
## </summary>
## <desc>
##  <p>
##  Allow connecting to the Murmur TCP port.
##  </p>
## </desc>
## <param name="domain">
##  <summary>
##  Type to be allowed to connect to the Murmur TCP port.
##  </summary>
## </param>
#
interface(`murmur_tcp_connect_port',`
    gen_require(`
        type murmur_port_t;
    ')

    allow $1 murmur_port_t:tcp_socket name_connect;
')

########################################
## <summary>
##  Allow connecting to the Murmur UDP port.
## </summary>
## <desc>
##  <p>
##  Allow connecting to the Murmur UDP port.
##  </p>
## </desc>
## <param name="domain">
##  <summary>
##  Type to be allowed to connect to the Murmur UDP port.
##  </summary>
## </param>
#
interface(`murmur_udp_connect_port',`
    gen_require(`
        type murmur_port_t;
    ')

    allow $1 murmur_port_t:udp_socket { sendto recvfrom };
')

########################################
## <summary>
##  Allow search access of Murmur lib data.
## </summary>
## <desc>
##  <p>
##  Allow search access of Murmur lib data.
##  </p>
## </desc>
## <param name="domain">
##  <summary>
##  Type to be allowed search access of Murmur lib data.
##  </summary>
## </param>
#
interface(`murmur_search_lib',`
    gen_require(`
        type murmur_var_lib_t;
    ')

    files_search_var_lib($1)
    allow $1 murmur_var_lib_t:dir search_dir_perms;
')

########################################
## <summary>
##  Allow read access to Murmur lib data.
## </summary>
## <desc>
##  <p>
##  Allow read access to Murmur lib data.
##  </p>
## </desc>
## <param name="domain">
##  <summary>
##  Type to be allowed read access to Murmur lib data.
##  </summary>
## </param>
#
interface(`murmur_read_lib_files',`
    gen_require(`
        type murmur_var_lib_t;
    ')

    allow $1 murmur_var_lib_t:file read_file_perms;
')

########################################
## <summary>
##  All of the rules required to
##  administrate a Murmur environment.
## </summary>
## <param name="domain">
##  <summary>
##  Domain allowed access.
##  </summary>
## </param>
## <param name="role">
##  <summary>
##  Role allowed access.
##  </summary>
## </param>
## <rolecap/>
#
interface(`murmur_admin',`
    gen_require(`
        type murmur_t, murmur_initrc_exec_t, murmur_log_t;
        type murmur_runtime_t;
    ')

    init_startstop_service($1, $2, murmur_t, murmur_initrc_exec_t)

    allow $1 murmur_t:process { ptrace signal_perms };
    ps_process_pattern($1, murmur_t)

    logging_search_logs($1)
    admin_pattern($1, murmur_log_t)

    files_search_pids($1)
    admin_pattern($1, murmur_runtime_t)
')
